plugins {
	id 'java'
	id 'idea'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
}

group = 'ro.rs'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacocoTestReport {
	dependsOn test // tests run before creating the report
	reports {
		xml.required
		csv.required
		html.destination file("${buildDir}/jacocoHtml")
	}
}
test {
	finalizedBy jacocoTestReport // report is created after tests run
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.19.0'
	implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.google.code.gson:gson:2.10.1'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	//needed to skip generating plain jar
	enabled = false
}
